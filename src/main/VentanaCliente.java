package main;

import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logica.Nodo;
import rmi.ClienteRmi;

/**
 *
 * @author Alejo
 */
public class VentanaCliente extends javax.swing.JFrame 
{
    private ClienteRmi cliente;
    /**
     * Creates new form VentanaCliente
     */
    public VentanaCliente(ClienteRmi cliente) {
        this.cliente = cliente;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtConsulta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        combCrud = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(52, 123, 171));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/2.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Cambria", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Base De Datos JerÃ¡rquica UAM");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Consulta:");

        txtConsulta.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txtConsulta.setText("co->edu->autonoma->datos");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Resultado:");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconoCerrar.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconoMinimizar.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        btnConsultar.setBackground(new java.awt.Color(0, 204, 102));
        btnConsultar.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnConsultar.setForeground(new java.awt.Color(255, 255, 255));
        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        txtResultado.setColumns(20);
        txtResultado.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txtResultado.setRows(5);
        jScrollPane1.setViewportView(txtResultado);

        jLabel7.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel7.setText("Domino: ");

        jLabel8.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("co.edu.autonoma");

        combCrud.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combCrud.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CREAR", "LEER", "ACTUALIZAR", "ELIMINAR" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtConsulta)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(134, 134, 134)
                        .addComponent(combCrud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(178, 178, 178)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(172, 172, 172))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnConsultar)
                .addGap(297, 297, 297))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(combCrud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtConsulta))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnConsultar)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String consulta = this.txtConsulta.getText();
        String[] info = consulta.split("->");
        String select = (String)this.combCrud.getSelectedItem();
        String ban = this.validarInfo(info, select);
        if(ban.equals("1"))
            this.txtResultado.setText("Nodo Creado Correctamente");
        else if(ban.equals("0"))
            this.txtResultado.setText("No Se Pudo Ejecutar La Consulta");
        else if(ban.equals("2"))
            this.txtResultado.setText("Nodo Eliminado Correctamente");
        else if(ban.equals("3"))
            this.txtResultado.setText("No Fue Posible Eliminar El Nodo");
        else if(ban.equals("4"))
            this.txtResultado.setText("Nodo Modificado Correctamente");
        else if(ban.equals("5"))
            this.txtResultado.setText("No Fue Posible Modificar El Nodo");
        else
            this.txtResultado.setText(ban);
        
        
        
        
        //this.txtResultado.setText("El tamaÃ±o es: " + info.length);
        
        
    }//GEN-LAST:event_btnConsultarActionPerformed

    public String validarInfo(String[] info, String crud)
    {
        String bandera = "0";
        int numNodes = info.length;
        //Datos escritos.
        String dom1 = "";
        String dom2 = "";
        String dom3 = "";
        String nodoPrincipal = "";
        String nameTable = "";
        String idTable = "";
        String campTable = "";
        
        switch (numNodes)
        {
            case 6: //Una consulta por id
                dom1 = info[0];
                dom2 = info[1];
                dom3 = info[2];
                nodoPrincipal = info[3];
                nameTable = info[4];
                idTable = info[5];
                break;
                
            case 7:
                dom1 = info[0];
                dom2 = info[1];
                dom3 = info[2];
                nodoPrincipal = info[3];
                nameTable = info[4];
                idTable = info[5];
                campTable = info[6];
                break;                               
        }
        
        
        Nodo nodo;
        if(dom1.equals("co") && dom2.equals("edu") && dom3.equals("autonoma") 
                                            && nodoPrincipal.equals("datos"))
        {
            if(!nameTable.equals(""))
            {
                nodo = this.cliente.getNodo(nameTable);
                if(nodo == null) //No existe la tabla en la base de datos.
                {
                    return "0";
                }
                else //Existe el nodo en la base de datos.
                {
                    switch (crud) //Depende de la operaciÃ³n que quiera hacer.
                    {
                        case "CREAR":
                            String user = this.convertUser(idTable);
                            try {
                                String res = nodo.crear(user);   
                                if(res.equals("yes"))
                                    return "1";                             
                            } catch (Exception e) 
                            {
                                return "0";
                            }                                                    
                            
                        case "LEER":
                            try 
                            {
                                //System.out.println("SIIII ENNNTRAA EN LLLERRRR");
                                int id = Integer.parseInt(idTable);
                                String res = nodo.leer(id);
                                //System.out.println("RESULTADOOOO:" + res);
                                return this.convertById(res);
                            } catch (Exception e) 
                            {
                                return "0";
                            }
                            
                        case "ACTUALIZAR":
                            try 
                            {
                                String res = nodo.actualizar(idTable);
                                if(res.equals("yes"))
                                    return "4";
                                else
                                    return "5";
                            } catch (Exception e) 
                            {
                                return "0";                                
                            }     
                            
                        case "ELIMINAR":
                            try 
                            {
                                //System.out.println("SIIII ENNNTRAA EN LLLERRRR");
                                int id = Integer.parseInt(idTable);
                                String res = nodo.eliminar(id);
                                if(res.equals("yes"))
                                    return "2";
                                else
                                    return "3";
                            } catch (Exception e) 
                            {
                                return "0";
                            }
                    }
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "PAILLLASSS: dom1: " + dom1 + "\n dom2: " + dom2
                                    + " \n dom3: " + dom3 + "\n nodo: " + nodoPrincipal + "\n"
                                    + "Num nodes: " + numNodes);
        }
                    
        return bandera;
    }
    
    
    public String convertUser(String info)
    {
        String res = "";
        String[] informacion = info.split(",");
        int numItems = informacion.length;
        
        switch(numItems)
        {
            case 1:
                res = informacion[0] + ",vacio:vacio,vacio:vacio";
                break;
                
            case 2:
                res = informacion[0] + "," + informacion[1] + ",vacio:vacio";
                break;
                
            case 3:
                res = informacion[0] + "," + informacion[1] + "," + informacion[2];
                break;
        }
        
        return res;        
    }
    
    public String convertById(String info)
    {
        String res = "";
        String[]informacion = info.split(",");
        int num = informacion.length;
        for (int i = 0; i < num; i++) 
        {
            res += informacion[i] + "\n";            
        }
        
        return res;        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JComboBox<String> combCrud;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtConsulta;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
